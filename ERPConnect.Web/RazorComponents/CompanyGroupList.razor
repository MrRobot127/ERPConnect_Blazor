@page "/CompanyGroup"
@using System.Net;
@using Syncfusion.Blazor.Grids


<div>
    <SfGrid  TValue="CompanyGroup"
            DataSource="@CompanyGroups"
            AllowPaging="true"
            AllowSorting="true"
            Toolbar="@(new List<string>(){"Add","Edit","Delete","Cancel","Update"})">
        <GridEvents OnActionBegin="ActionBeginHandler" TValue="CompanyGroup"></GridEvents>
        <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true"></GridEditSettings>

        <GridPageSettings PageSize="10"></GridPageSettings>
        <GridColumns>
            <GridColumn Field="@nameof(CompanyGroup.Id)" HeaderText="Group Code"></GridColumn>
            <GridColumn Field="@nameof(CompanyGroup.GroupName)" HeaderText="Group Name"></GridColumn>
        </GridColumns>
    </SfGrid>
</div>


@code
{
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    [Inject]
    private NavigationManager NavigationManager { get; set; }

    [Inject]
    public ICompanyGroupService CompanyGroupService { get; set; }

    public List<CompanyGroup> CompanyGroups { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = authenticationStateTask.Result;

        if (!authenticationState.User.Identity.IsAuthenticated)
        {
            string returnUrl = WebUtility.UrlEncode($"/MasterEntry/CompanyGroup");
            NavigationManager.NavigateTo($"/Identity/Account/Login?returnUrl={returnUrl}");
        }
        var user = authenticationState.User;

        CompanyGroups = (await CompanyGroupService.GetCompanyGroup()).ToList();
    }

    public async void ActionBeginHandler(ActionEventArgs<CompanyGroup> args)
    {
        if (args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Save))
        {
            if (args.Action == "Add")
            {
                await CompanyGroupService.AddCompanyGroup(args.Data);
                CompanyGroups = (await CompanyGroupService.GetCompanyGroup()).ToList();
                // Grid.Refresh();
            }
            else
            {
                await CompanyGroupService.UpdateCompanyGroup(args.Data);
            }
        }
        if (args.RequestType.Equals(Syncfusion.Blazor.Grids.Action.Delete))
        {
            await CompanyGroupService.DeleteCompanyGroup(args.Data.Id);
        }
    }
}